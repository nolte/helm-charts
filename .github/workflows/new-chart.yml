name: Remote Dispatch Action Responder

on: [repository_dispatch]

jobs:
  integrate_chart:
    runs-on: ubuntu-latest
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
      - uses: actions/github-script@0.4.0
        if: github.event.action == 'helm_release'
        id: load_release_informations
        #result-encoding: string
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const owner = context.payload.client_payload.repository.split("/")[0]
            const repo = context.payload.client_payload.repository.split("/")[1]
            const release_id = context.payload.client_payload.releaseId
            const release = await github.repos.getRelease({
              owner,
              repo,
              release_id
            })
            return release.data
      - name: Create Pull Request
        if: success()
        run: |
          sudo apt-get install jq
          
          echo '${{ steps.load_release_informations.outputs.result }}' | jq


#      - uses: actions/checkout@v2
#        if: github.event.action == 'helm_release'
#      - name: wget
#        uses: wei/wget@v1
#        if: github.event.action == 'helm_release'
#        with:
#          args: -P ./chart-repo/ ${{ github.event.client_payload.chart_download_url }} 
#
#      - name: Create Pull Request
#        uses: peter-evans/create-pull-request@v2
#        if: success()
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          title: "New Chart Release"
